version: "3" 

vars:
  IMAGE: ghcr.io/mastrogpt/agent41-starter:2506201530

env:
  KUBECONFIG:
    sh: |-
      if test -e "$OPS_TMP/kubeconfig"
      then echo "$OPS_TMP/kubeconfig"
      else echo ~/.kube/config
      fi

tasks:

  deploy:
    silent: true
    desc: deploy the devcontainer
    cmds:
      - test -e ~/.ssh/id_rsa.pub || die "please generate an ssh key with ssh-keygen in ~/.ssh/id_rsa.pub"
      - >
          kubectl -n nuvolaris create secret generic ssh-secret 
          --from-literal=authorized_keys="$(cat ~/.ssh/id_rsa.pub)" 2>/dev/null || die "devcontainer already exists"
      - >
          kubectl -n nuvolaris create secret generic devel-secret 
          --from-literal=password="$(cat ~/.ops/devel.password)"
      - |
        export IMAGE="{{.IMAGE}}"
        envsubst < deployment.yaml >_deployment.yaml
        kubectl apply -f _deployment.yaml
      - ops setup kubernetes wait-pod SELECTOR="-l app=ssh-devcontainer" COND=false FILE=_devcontainer
      - |
        touch ~/.ssh/config
        if ! rg "Host miniops" ~/.ssh/config >/dev/null
        then echo -e "\nHost miniops\n  Hostname localhost\n  Port 2222\n  User node\n  StrictHostKeyChecking no\n  UserKnownHostsFile=/dev/null\n" >> ~/.ssh/config
        fi
      - >
        retry -t 100 -m 600 ssh miniops exit 2>&1 
        | awk '{s=""; for(i=1;i<=NR;i++) s=s"#"; printf "\rwaiting for ssh: [%s]", s; fflush()}'
      - echo -e "\nyou can now connect to the devcontainer with 'ssh miniops'"

  undeploy:
    silent: true
    desc: undeploy the devcontainer
    cmds:
      - kubectl -n nuvolaris delete deploy/ssh-devcontainer secret/ssh-secret secret/devel-secret 
      - echo Please remove the Host miniops entry from your ~/.ssh/config file if present

  docker-deploy:
    desc: deploy the ssh-devcontainer with docker
    silent: true
    cmds:
      - >  
        docker run 
        --name ssh-devcontainer --rm
        -e SSH_KEY="$(cat ~/.ssh/id_rsa.pub)" 
        --entrypoint /bin/bash 
        -p 2222:2222
        {{.IMAGE}}
        -c '
            mkdir -p ~/.ssh ;
            echo "$SSH_KEY" > ~/.ssh/authorized_keys ;
            chmod 600 ~/.ssh/authorized_keys ;
            sudo apt-get update ;
            sudo apt-get install -y openssh-server ;
            sudo mkdir -p /run/sshd ;
            sudo ssh-keygen -A ;
            echo starting sshd... ;
            sudo /usr/sbin/sshd -p 2222 -D
          '

  docker-undeploy:
    desc: deploy the ssh-devcontainer with docker
    silent: true
    cmds:
    - docker rm -f ssh-devcontainer || echo "no docker container ssh-devcontainer running"
